{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","class","alt","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","className","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","style","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQA2BeA,EA3BF,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACX,OACI,qBAAKC,MAAM,eAAX,SACI,sBAAKA,MAAM,OAAX,UAEI,qBAAKA,MAAM,aAAX,SACI,wBAAQA,MAAM,oBAAd,SACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,gCAI9B,qBAAKH,MAAM,eAAX,SACI,sBAAKA,MAAM,gBAAX,UACA,qBAAKA,MAAM,aAAX,SACSD,EAAQK,OAEjB,qBAAKJ,MAAM,gBAAX,SACSD,EAAQM,mBCFtBC,EAZE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACf,OACQ,qBAAKP,MAAM,uBAAX,SAEIO,EAASC,KAAI,SAAAT,GAAO,OAChB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQI,UCC1CM,EATG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAE7B,OACI,qBAAKC,UAAU,MAAf,SACG,uBAAOZ,MAAM,6BAA6Ba,KAAK,SAASH,YAAaA,EAAaI,SAAUH,OCmDxFI,E,kDA9Cb,aAAe,IAAD,8BACZ,gBAaFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,oBAQ1C,WAAU,IAAD,SAEyBC,KAAKN,MAA9Bd,EAFA,EAEAA,SAAUW,EAFV,EAEUA,YAEXU,EAAmBrB,EAASsB,QAAO,SAAA9B,GAAO,OAC5CA,EAAQK,KAAK0B,cAAcC,SAASb,EAAYY,kBAGpD,OAEE,qBAAKlB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UAEE,oBAAIoB,MAAO,CAAC,YAAa,QAAzB,uBAEA,qBAAKhC,MAAM,QAAX,SACE,cAAC,EAAD,CAAWU,YAAY,kBAAkBC,aAAc,SAAAK,GAAC,OAAI,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,aAEnG,qBAAKpB,MAAM,QAAX,SACE,cAAC,EAAD,CAAUO,SAAUqB,e,GAvCdK,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3fb07b9.chunk.js","sourcesContent":["const Card = ({monster}) => {\r\n    return(\r\n        <div class=\"column is-3 \">\r\n            <div class=\"card\">\r\n\r\n                <div class=\"card-image\">\r\n                    <figure class=\"image is-180by180\">\r\n                        <img alt='monster' src={`https://robohash.org/${monster.id}?set=set4&size=180x180`}/>\r\n                    </figure>\r\n                </div>\r\n\r\n                <div class=\"card-content\">\r\n                    <div class=\"media-content\">\r\n                    <div class=\"title is-4\">\r\n                            {monster.name}\r\n                    </div>\r\n                    <div class=\"subtitle is-6\">\r\n                            {monster.email}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","\r\nimport Card from './Card';\r\n\r\nconst CardList = ({monsters}) => {\r\n    return(\r\n            <div class=\"columns is-multiline\">\r\n            {\r\n                monsters.map(monster => (\r\n                    <Card monster={monster} key={monster.id}/>\r\n                ))\r\n            }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","const SearchBox = ({placeholder, handleChange}) => {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n           <input class='input is-primary is-medium' type=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import './App.css';\n\nimport \"bulma\";\nimport { Component } from 'react';\n\nimport CardList from './components/CardList';\nimport SearchBox from './components/SearchBox';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n\n  render() {\n\n    const {monsters, searchField} = this.state;\n\n    const filteredMonsters = monsters.filter(monster => \n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n\n      <div className=\"App\">\n        <div className=\"container\">\n\n          <h1 style={{'font-size': '64px'}}>Cute Cats</h1>\n\n          <div class=\"block\">\n            <SearchBox placeholder=\"Search Monsters\" handleChange={e => this.setState({searchField: e.target.value})} />\n          </div>\n          <div class=\"block\">\n            <CardList monsters={filteredMonsters} />\n          </div>  \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}